<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Galería de Modelos 3D y RA</title>
  <script type="module" src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"></script>
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 0; background: #fafafa; }
    h1 { text-align: center; margin-top: 1em; }
    .gallery { display: flex; flex-wrap: wrap; justify-content: center; gap: 1em; margin-bottom: 2em; }
    .gallery-item { text-align: center; }
    .controls { display: flex; justify-content: center; gap: 2em; flex-wrap: wrap; margin-bottom: 2em; }
    .model-container { display: flex; flex-wrap: wrap; justify-content: center; gap: 2em; }
    model-viewer { width: 350px; height: 350px; border-radius: 12px; background: #fff; box-shadow: 0 2px 12px #0001; }
    .toggle-btn { margin-top: 0.5em; }
  </style>
</head>
<body>
  <h1>Galería interactiva de modelos 3D y RA</h1>
  <div class="gallery" id="gallery"></div>
  <div class="controls" id="controls"></div>
  <div class="model-container" id="modelContainer"></div>

  <script>
    // Lista de modelos (solo GLB)
    const models = [
      { name: 'ARQ', file: 'ARQ.glb' },
      { name: 'EST', file: 'EST.glb' },
      { name: 'HDR', file: 'HDR.glb' },
      { name: 'ELE', file: 'ELE.glb' },
      { name: 'HVAC', file: 'HVAC.glb' },
      { name: 'RCI', file: 'RCI.glb' },
    ];

    // Estado de visualización de cada modelo
    const activeModels = models.map(() => false);

    // Renderiza la galería de botones
    function renderGallery() {
      const gallery = document.getElementById('gallery');
      gallery.innerHTML = models.map((model, i) => `
        <div class="gallery-item">
          <div><strong>${model.name}</strong></div>
          <button class="toggle-btn" onclick="toggleModel(${i})">
            ${activeModels[i] ? 'Ocultar' : 'Mostrar'}
          </button>
        </div>
      `).join('');
    }

    // Renderiza los controles globales
    function renderControls() {
      const controls = document.getElementById('controls');
      controls.innerHTML =
        `<button onclick="showAll()">Mostrar todos</button>
         <button onclick="hideAll()">Ocultar todos</button>`;
    }

    // Renderiza los modelos activos
    function renderModels() {
      const container = document.getElementById('modelContainer');
      container.innerHTML = models.map((model, i) =>
        activeModels[i] ? `
          <model-viewer
            src="${model.file}"
            ar
            ar-modes="webxr scene-viewer quick-look"
            camera-controls
            auto-rotate
            alt="${model.name}">
          </model-viewer>
        ` : ''
      ).join('');
    }

    // Funciones de control
    window.toggleModel = function(i) {
      activeModels[i] = !activeModels[i];
      renderGallery();
      renderModels();
    }

    window.showAll = function() {
      activeModels.fill(true);
      renderGallery();
      renderModels();
    }

    window.hideAll = function() {
      activeModels.fill(false);
      renderGallery();
      renderModels();
    }

    // Inicializa la galería
    renderGallery();
    renderControls();
    renderModels();
  </script>
</body>
</html>
